//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Base;
using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.PalletBoard;
using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Ajuna.NetApi.Model.PalletBoard
{
    
    
    public sealed class BoardStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public BoardStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Board", "BoardStates"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Ajuna.NetApi.Model.Types.Primitive.U32), typeof(Ajuna.NetApi.Model.PalletBoard.BoardGame)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Board", "BoardWinners"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Ajuna.NetApi.Model.Types.Primitive.U32), typeof(Ajuna.NetApi.Model.SpCore.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Board", "PlayerBoards"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Ajuna.NetApi.Model.SpCore.AccountId32), typeof(Ajuna.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Board", "Seed"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Ajuna.NetApi.Model.Types.Primitive.U32)));
        }
        
        /// <summary>
        /// >> BoardStatesParams
        ///  Board states by board id
        /// </summary>
        public static string BoardStatesParams(Ajuna.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Board", "BoardStates", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Identity}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> BoardStates
        ///  Board states by board id
        /// </summary>
        public async Task<Ajuna.NetApi.Model.PalletBoard.BoardGame> BoardStates(Ajuna.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = BoardStorage.BoardStatesParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.PalletBoard.BoardGame>(parameters, token);
        }
        
        /// <summary>
        /// >> BoardWinnersParams
        ///  The board winners by board id
        /// </summary>
        public static string BoardWinnersParams(Ajuna.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Board", "BoardWinners", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Identity}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> BoardWinners
        ///  The board winners by board id
        /// </summary>
        public async Task<Ajuna.NetApi.Model.SpCore.AccountId32> BoardWinners(Ajuna.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = BoardStorage.BoardWinnersParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.SpCore.AccountId32>(parameters, token);
        }
        
        /// <summary>
        /// >> PlayerBoardsParams
        ///  Players in boards
        /// </summary>
        public static string PlayerBoardsParams(Ajuna.NetApi.Model.SpCore.AccountId32 key)
        {
            return RequestGenerator.GetStorage("Board", "PlayerBoards", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Identity}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> PlayerBoards
        ///  Players in boards
        /// </summary>
        public async Task<Ajuna.NetApi.Model.Types.Primitive.U32> PlayerBoards(Ajuna.NetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            string parameters = BoardStorage.PlayerBoardsParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> SeedParams
        ///  Random seed
        /// </summary>
        public static string SeedParams()
        {
            return RequestGenerator.GetStorage("Board", "Seed", Ajuna.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> Seed
        ///  Random seed
        /// </summary>
        public async Task<Ajuna.NetApi.Model.Types.Primitive.U32> Seed(CancellationToken token)
        {
            string parameters = BoardStorage.SeedParams();
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.Types.Primitive.U32>(parameters, token);
        }
    }
    
    public sealed class BoardCalls
    {
        
        /// <summary>
        /// >> new_game
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method NewGame(Ajuna.NetApi.Model.Types.Primitive.U32 board_id, Ajuna.NetApi.Model.Base.BTreeSet players)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(board_id.Encode());
            byteArray.AddRange(players.Encode());
            return new Method(21, "Board", 0, "new_game", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> play_turn
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method PlayTurn(Ajuna.NetApi.Model.PalletBoard.EnumTurn turn)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(turn.Encode());
            return new Method(21, "Board", 1, "play_turn", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> finish_game
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method FinishGame(Ajuna.NetApi.Model.Types.Primitive.U32 board_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(board_id.Encode());
            return new Method(21, "Board", 2, "finish_game", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> GameCreated
    /// Game has been created
    /// </summary>
    public sealed class EventGameCreated : BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, BaseVec<Ajuna.NetApi.Model.SpCore.AccountId32>>
    {
    }
    
    /// <summary>
    /// >> GameFinished
    /// Game has finished with the winner
    /// </summary>
    public sealed class EventGameFinished : BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.SpCore.AccountId32>
    {
    }
    
    public enum BoardErrors
    {
        
        /// <summary>
        /// >> NotEnoughPlayers
        /// Not enough players for the game
        /// </summary>
        NotEnoughPlayers,
        
        /// <summary>
        /// >> DuplicatePlayer
        /// Duplicate player found
        /// </summary>
        DuplicatePlayer,
        
        /// <summary>
        /// >> TooManyPlayers
        /// Too many players
        /// </summary>
        TooManyPlayers,
        
        /// <summary>
        /// >> InvalidStateFromGame
        /// Invalid state from game
        /// </summary>
        InvalidStateFromGame,
        
        /// <summary>
        /// >> NotPlaying
        /// Player not playing
        /// </summary>
        NotPlaying,
        
        /// <summary>
        /// >> InvalidTurn
        /// Invalid turn played
        /// </summary>
        InvalidTurn,
        
        /// <summary>
        /// >> InvalidBoard
        /// Invalid board
        /// </summary>
        InvalidBoard,
        
        /// <summary>
        /// >> PlayerAlreadyInGame
        /// Player already in game
        /// </summary>
        PlayerAlreadyInGame,
        
        /// <summary>
        /// >> BoardExists
        /// Board already exists
        /// </summary>
        BoardExists,
    }
}
