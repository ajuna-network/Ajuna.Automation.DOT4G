//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi;
using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace AjunaNET.NetApiExt.Generated.Storage
{
    
    
    public sealed class AjunaMatchmakerStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public AjunaMatchmakerStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("AjunaMatchmaker", "Brackets"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Primitive.U32), typeof(AjunaNET.NetApiExt.Generated.Model.pallet_ajuna_matchmaker.types.BracketRange)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("AjunaMatchmaker", "Players"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U32>), typeof(AjunaNET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("AjunaMatchmaker", "PlayerQueue"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(AjunaNET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(Ajuna.NetApi.Model.Types.Primitive.U8)));
        }
        
        /// <summary>
        /// >> BracketsParams
        ///  Map of brackets with their index
        /// </summary>
        public static string BracketsParams(Ajuna.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("AjunaMatchmaker", "Brackets", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> Brackets
        ///  Map of brackets with their index
        /// </summary>
        public async Task<AjunaNET.NetApiExt.Generated.Model.pallet_ajuna_matchmaker.types.BracketRange> Brackets(Ajuna.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = AjunaMatchmakerStorage.BracketsParams(key);
            return await _client.GetStorageAsync<AjunaNET.NetApiExt.Generated.Model.pallet_ajuna_matchmaker.types.BracketRange>(parameters, token);
        }
        
        /// <summary>
        /// >> PlayersParams
        ///  A double map indexed by bracket and account
        /// </summary>
        public static string PlayersParams(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U32> key)
        {
            return RequestGenerator.GetStorage("AjunaMatchmaker", "Players", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> Players
        ///  A double map indexed by bracket and account
        /// </summary>
        public async Task<AjunaNET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> Players(Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U32, Ajuna.NetApi.Model.Types.Primitive.U32> key, CancellationToken token)
        {
            string parameters = AjunaMatchmakerStorage.PlayersParams(key);
            return await _client.GetStorageAsync<AjunaNET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>(parameters, token);
        }
        
        /// <summary>
        /// >> PlayerQueueParams
        ///  A map tracking which accounts are queued
        /// </summary>
        public static string PlayerQueueParams(AjunaNET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("AjunaMatchmaker", "PlayerQueue", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> PlayerQueue
        ///  A map tracking which accounts are queued
        /// </summary>
        public async Task<Ajuna.NetApi.Model.Types.Primitive.U8> PlayerQueue(AjunaNET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, CancellationToken token)
        {
            string parameters = AjunaMatchmakerStorage.PlayerQueueParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.Types.Primitive.U8>(parameters, token);
        }
    }
    
    public sealed class AjunaMatchmakerCalls
    {
    }
}
